@page
@model Bitnvest.Pages.DashboardModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Dashboard";
}

<div class="main-container row">
    <section class="col-lg-3 col-md-12 section-nav">
        <input type="hidden" name="saldo" id="saldoOriginal" value="@Model.Correntista.Conta.Saldo" />
        <div class="balance">Saldo: <span class="money">@string.Format("{0:C}", Model.Correntista.Conta.Saldo)</span></div>
        <nav class="left-menu">
            <ul>
                <li><a href="#" class="btn orange-btn btn-left">Painel</a></li>
                <li><a href="#" class="btn orange-btn btn-left" data-toggle="modal" data-target="#ComprarCrypto">Transação de Crypto Moedas</a></li>
                <li><a href="#" class="btn orange-btn btn-left" data-toggle="modal" data-target="#Saque">Retirar Dinheiro</a></li>
                <li><a href="#" class="btn orange-btn btn-left" data-toggle="modal" data-target="#Depositar">Depositar</a></li>
            </ul>
        </nav>
    </section>
    <main class="col-lg-5 col-md-12">
        <div class="investiment">

            Saldo Total Investido: <span class="money">@string.Format("{0:C}", Model.ListaMoedas.ValorTotal)</span>
        </div>
        <ul class="money-table">
            @{


                foreach (var item in Model.ListaMoedas.ListaMoedas.OrderByDescending(x => x.Nome))
                {

                    if (item.Nome != null)
                    {
                        <li>
                            <div>@item.Nome</div>
                            <div id="@item.Nome.Replace(" ","")NumeroMoedas">@item.Quantidade</div>
                            <div class="money">@string.Format("{0:C}", item.Valor)</div>
                        </li>
                    }

                }
            }
        </ul>
    </main>
    <section class="col-lg-4 col-md-12 chart">
        <div class="char-title">
            @*<h4>CRYPTOMOEDA</h4>*@
            <h4>MOEDA 1</h4>
            <div class="cripto-value">@string.Format("{0:C}", Model.ValorMoeda[Model.ValorMoeda.Length - 1])</div>
            @{
                if (Model.Percentual.Sinal)
                {
                    <small class="cripto-value money">+ @string.Format("{0:C}", Model.Percentual.Valor) <span>mensal</span></small>
                }
                else
                {
                    <small class="cripto-value money red">- @string.Format("{0:C}", Model.Percentual.Valor) <span>mensal</span></small>
                }
            }
        </div>
        <canvas id="myChart" width="400" height="400"></canvas>
    </section>

</div>


<!-- Modal depósito -->
<div class="modal fade" id="Depositar" tabindex="-1" role="dialog" aria-labelledby="Depositar" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">DEPÓSITO</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div>
                    <strong>Código:</strong><span> Bitnvest - 001</span>
                </div>
                <br />
                <div>
                    <strong>Agência:</strong><span> 0001</span>
                </div>
                <br />
                <div>
                    <strong>Conta:</strong><span> @Model.Correntista.Conta.Numero</span>
                </div>
                <hr />
                <form method="post">
                    <button class="btn btn-default" asp-page-handler="AdicionarSaldo">Adicionar mais R$ 100,00</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal saque -->
<div class="modal fade" id="Saque" tabindex="-1" role="dialog" aria-labelledby="Saque" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">SAQUE</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form method="post" id="formSaque">
                    <div>
                        <strong>Código do banco:</strong><input class="form-control" required type="number" id="BancoId" name="BancoId" min="1" />
                    </div>
                    <br />
                    <div>
                        <strong>Agência:</strong><input class="form-control" type="number" required id="Agencia" name="Agencia"  min="1" />
                    </div>
                    <br />
                    <div>
                        <strong>Conta:</strong><input class="form-control" type="number" required id="Conta" name="Conta" min="1" />
                    </div>
                    <div>
                        <br />
                        <strong>Valor:</strong><input class="form-control" type="text" required id="ValorSaque" name="ValorSaque" />
                    </div>
                        <input type="hidden" id="ValorSaqueFloat" name="ValorSaqueFloat" />
                    <hr />
                    <button class="btn btn-default" asp-page-handler="Sacar">Sacar</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal Compra de Moedas -->
<div class="modal fade" id="ComprarCrypto" tabindex="-1" role="dialog" aria-labelledby="ComprarCrypto" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">COMPRAR E VENDA DE CRYPTOMOEDAS</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form method="post" class="modal-form">
                    <div>
                        <em><strong>Compra:</strong> digite a quantidade de moedas que você quer! e click em INVESTIR</em>
                        <br />
                        <em><strong>Venda:</strong> digite a quantidade de moedas que deseja vender! e click em VENDER</em>
                    </div>
                    <br />
                    @{
                        foreach (var moeda in Model.Moedas)
                        {
                            <br />
                            <div class="row">
                                <input type="hidden" name="valor" id="@moeda.Nome.Replace(" ","")" value="@moeda.Cotacao" />
                                <div class="col-md-3 top-6">
                                    <strong>Nome:</strong> @moeda.Nome
                                </div>
                                <div class="col-md-3 top-6">
                                    <strong>Valor:</strong> @string.Format("{0:C}", moeda.Cotacao)
                                </div>
                                <div class="col-md-6">
                                    <strong>Qtd de Moeda:</strong>
                                    <input type="number" max="10000" min="0" id="@moeda.Nome.Replace(" ","")-compra" name="@moeda.Nome.Replace(" ","")Compra" value="0" />
                                </div>
                            </div>
                        }
                    }

                    <div>
                        <hr />
                        <h4>
                            <span>Valor:</span> <strong id="crypto-valor">R$ 0,00</strong>
                        </h4>
                    </div>
                    <hr />

                    <button class="btn btn-primary" id="investir" asp-page-handler="Investir">Investir</button>
                    <button class="btn btn-default" id="vender" asp-page-handler="Vender">Vender</button>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {

    <script src="~/lib/jquery.mask.min.js"></script>
    <script>
        var data = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.DatasMoeda));
        var valores = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ValorMoeda));

        let saldoUsuario = parseFloat($("#saldoOriginal").val().replace(',', '.'));

       let valueMask = $('#ValorSaque').mask("#.##0,00", { reverse: true });

        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: data,
                datasets: [{
                    label: '# of Votes',
                    data: valores,
                    backgroundColor: [
                        'rgba(67, 112, 193, 1)'
                    ],
                    borderColor: [
                        'rgba(54, 97, 175, 1)',
                    ],
                    borderWidth: 2
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
                legend: {
                    display: false
                },
                tooltips: {
                    callbacks: {
                        label: function (tooltipItem) {
                            return "Valor R$" + Number(tooltipItem.yLabel) + "- Moeda 1";
                        }
                    }
                }
            }
        });

        let cryptoValor = $("#crypto-valor");

        let form = $('.modal-form');
        let ComprarCrypto = $('#ComprarCrypto');

        let compraMoeda1 = $("#Moeda1-compra");
        let compraMoeda2 = $("#Moeda2-compra");
        let compraMoeda3 = $("#Moeda3-compra");

        @*ComprarCrypto.submit(e => e.preventDefault())*@

        var resultado1 = 0.0;
        var resultado2 = 0.0;
        var resultado3 = 0.0;

        var resultadoFinal = 0.0;

        $('#ComprarCrypto').on('shown.bs.modal', function () {

            let valorMoeda1 = parseFloat($("#Moeda1").val().replace(',','.'));
            let valorMoeda2 = parseFloat($("#Moeda2").val().replace(',', '.'));
            let valorMoeda3 = parseFloat($("#Moeda3").val().replace(',', '.'));

            compraMoeda1.keyup((e) => {

                resultado1 = compraMoeda1.val() * valorMoeda1;
                SomandoACompraCryptoMoedas();
            })

            compraMoeda2.keyup((e) => {

                resultado2 = compraMoeda2.val() * valorMoeda2;
                SomandoACompraCryptoMoedas();
            })

            compraMoeda3.keyup((e) => {

                resultado3 = compraMoeda3.val() * valorMoeda3;
                SomandoACompraCryptoMoedas();
            })

        })

        function SomandoACompraCryptoMoedas() {
            resultadoFinal = resultado1 + resultado2 + resultado3;
            cryptoValor.html(new Intl.NumberFormat([], { style: 'currency', currency: 'BRL' }).format(resultadoFinal))
        }

        $("#investir").click((e) => {

            if (resultadoFinal == 0 || saldoUsuario == 0) {
                e.preventDefault();
            }

            if (resultadoFinal > saldoUsuario) {
                e.preventDefault();
                alert("Ops! O valor não pode ser maior que seu saldo!")
            }

        });


        $("#vender").click((e) => {
            var qtdMoedas1 = parseInt($("#Moeda1NumeroMoedas").text());
            var qtdMoedas2 = parseInt($("#Moeda2NumeroMoedas").text());
            var qtdMoedas3 = parseInt($("#Moeda3NumeroMoedas").text());

            if (qtdMoedas1 == 0 && qtdMoedas2 == 0 && qtdMoedas3 == 0) {
                e.preventDefault();
            }

            if (compraMoeda1.val() > qtdMoedas1) {
                e.preventDefault();
                alert("Ops! Você não pode vender mais moedas do Tipo (Moeda 1), do que se tem!")
            }

            if (compraMoeda2.val() > qtdMoedas2) {
                e.preventDefault();
                alert("Ops! Você não pode vender mais moedas do Tipo (Moeda 2), do que se tem!")
            }

            if (compraMoeda3.val() > qtdMoedas3) {
                e.preventDefault();
                alert("Ops! Você não pode vender mais moedas do Tipo (Moeda 3), do que se tem!")
            }
            $("#vender").unbind('click')

        });

        $('#formSaque').submit(e => {

            let saque = parseFloat($('#ValorSaque').val().replace(/\./gm, '').replace(',', '.'));
            console.log(saque)
            if (saque > saldoUsuario) {
                e.preventDefault();
                alert("Saque acima do Limite em conta!")
                return;
            }

            $("#ValorSaqueFloat").val(saque);

        })
    </script>
}