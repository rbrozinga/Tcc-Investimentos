// <auto-generated />
using System;
using Bitnvest.DataAcess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bitnvest.DataAcess.Migrations
{
    [DbContext(typeof(DbSqlContext))]
    [Migration("20201123055528_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bitnvest.Model.Models.Administracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("Bitnvest.Model.Models.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Numero");

                    b.Property<decimal>("Saldo");

                    b.HasKey("Id");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("Bitnvest.Model.Models.Correntista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF");

                    b.Property<string>("Cel");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Email");

                    b.Property<int>("IdConta");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.HasIndex("IdConta")
                        .IsUnique();

                    b.ToTable("Correntistas");
                });

            modelBuilder.Entity("Bitnvest.Model.Models.Moeda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cotacao");

                    b.Property<DateTime?>("DataAtualizacao");

                    b.Property<DateTime>("DataCotacao");

                    b.Property<string>("Nome");

                    b.Property<int>("Quantidade");

                    b.HasKey("Id");

                    b.ToTable("Moedas");
                });

            modelBuilder.Entity("Bitnvest.Model.Models.MoedaTransacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cotacao");

                    b.Property<string>("Nome");

                    b.Property<int>("Quantidade");

                    b.Property<int?>("TransacaoId");

                    b.Property<decimal>("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("TransacaoId");

                    b.ToTable("MoedaTransacoes");
                });

            modelBuilder.Entity("Bitnvest.Model.Models.PagamentoTarifas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataPagamento");

                    b.Property<DateTime>("DataVencimento");

                    b.Property<int>("IdCorrentista");

                    b.Property<int>("IdTarifa");

                    b.HasKey("Id");

                    b.HasIndex("IdCorrentista");

                    b.HasIndex("IdTarifa");

                    b.ToTable("PagamentosTarifas");
                });

            modelBuilder.Entity("Bitnvest.Model.Models.Tarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.Property<int>("PagamentoEmDias");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Tarifas");
                });

            modelBuilder.Entity("Bitnvest.Model.Models.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContaId");

                    b.Property<DateTime>("DataTransacao");

                    b.Property<int>("Quantidade");

                    b.Property<int>("TipoTransacao");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("Bitnvest.Model.Models.Correntista", b =>
                {
                    b.HasOne("Bitnvest.Model.Models.Conta", "Conta")
                        .WithOne("Correntista")
                        .HasForeignKey("Bitnvest.Model.Models.Correntista", "IdConta")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bitnvest.Model.Models.MoedaTransacao", b =>
                {
                    b.HasOne("Bitnvest.Model.Models.Transacao")
                        .WithMany("MoedasTransacao")
                        .HasForeignKey("TransacaoId");
                });

            modelBuilder.Entity("Bitnvest.Model.Models.PagamentoTarifas", b =>
                {
                    b.HasOne("Bitnvest.Model.Models.Correntista", "Correntista")
                        .WithMany("Tarifas")
                        .HasForeignKey("IdCorrentista")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bitnvest.Model.Models.Tarifa", "Tarifa")
                        .WithMany("Pagamentos")
                        .HasForeignKey("IdTarifa")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bitnvest.Model.Models.Transacao", b =>
                {
                    b.HasOne("Bitnvest.Model.Models.Conta", "Conta")
                        .WithMany("Transacoes")
                        .HasForeignKey("ContaId");
                });
#pragma warning restore 612, 618
        }
    }
}
